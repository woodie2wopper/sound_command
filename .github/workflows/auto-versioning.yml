name: Auto Versioning

on:
  push:
    branches:
      - main

jobs:
  update-versions:
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Set up Git
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@github.com"

    - name: Determine version bump
      id: version_bump
      run: |
        if [[ "${{ github.event.head_commit.message }}" == *"[MAJOR]"* ]]; then
          echo "BUMP=major" >> $GITHUB_ENV
        elif [[ "${{ github.event.head_commit.message }}" == *"[MINOR]"* ]]; then
          echo "BUMP=minor" >> $GITHUB_ENV
        else
          echo "BUMP=patch" >> $GITHUB_ENV
        fi

    - name: Update version and last updated
      run: |
        DATE=$(date +'%Y-%m-%d %H:%M:%S')
        for file in $(find . -type f \( -name "*.py" -o -name "*.sh" -o -name "*.bash" -o -name "*.awk" \)); do
          if grep -q "__version__" "$file"; then
            # Update existing version
            sed -i "s/__version__ = \".*\"/__version__ = \"${{ env.NEW_VERSION }}\"/" "$file"
            sed -i "s/__last_updated__ = \".*\"/__last_updated__ = \"$DATE\"/" "$file"
          else
            # Add version and last updated
            if [[ "$file" == *.py ]]; then
              sed -i "1a __version__ = \"${{ env.NEW_VERSION }}\"\n__last_updated__ = \"$DATE\"" "$file"
            else
              sed -i "2a __version__ = \"${{ env.NEW_VERSION }}\"\n__last_updated__ = \"$DATE\"" "$file"
            fi
          fi
        done

    - name: Commit and push changes
      run: |
        git add .
        git commit -m "chore: Update version to ${{ env.NEW_VERSION }}" || echo "No changes to commit"
        git push origin HEAD:main
